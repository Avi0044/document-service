---
- name: Download binary file from Jfrog
  hosts: jump-host
  vars:
    workspace: "{{ lookup('env','WORKSPACE') }}"
    ansible_python_interpreter: /usr/bin/python3
    timestamp_format: "{{ lookup('pipe', 'date +%Y%m%d-%H%M%S') }}"
  vars_files:
    - /var/jenkins_home/ansible-pass.yml #jfrog_pass stored in encrypted format

  tasks:
    - name: Setting timestamp
      set_fact:
        timestamp: "{{timestamp_format}}"

    - name: Get the latest SNAPSHOT version
      uri:
        url: "{{jfrogUrl}}/artifactory/{{jfrogRepository}}/{{jfrogArtifactId}}/{{appName}}/maven-metadata.xml"
        method: GET
        user: "{{jfrogUserName}}"
        password: "{{jfrog_pass}}"
        return_content: yes
        body_format: json
      register: result

    - name: Get snapshot version
      delegate_to: localhost
      xml:
        xmlstring: "{{result.content}}"
        xpath: /metadata/versioning/latest
        content: "text"
      register: snapshot_version

    - name: Get maven file for latest snapshot
      uri:
        url: "{{jfrogUrl}}/artifactory/{{jfrogRepository}}/{{jfrogArtifactId}}/{{appName}}/{{snapshot_version.matches[0]['latest']}}/maven-metadata.xml"
        method: GET
        user: "{{jfrogUserName}}"
        password: "{{jfrog_pass}}"
        return_content: yes
        body_format: json
      register: maven_result

    - name: Get jar version
      delegate_to: localhost
      xml:
        xmlstring: "{{ maven_result.content}}"
        xpath: "/metadata/versioning/snapshotVersions/snapshotVersion[1]/value"
        content: "text"
      register: jar_version

    - name: Set build var
      set_fact:
        buildNumber: "{{snapshot_version.matches[0]['latest'].split('-')[1]}}"

    - name: Set directories vars
      set_fact:
        downloadDir: "/tmp/download/{{buildNumber}}/{{timestamp}}/{{appName}}"
        systemdServiceDir: "/tmp/download/{{appName}}"

    - name: Create download directory if not exists
      file:
        path: "{{downloadDir}}"
        state: directory
        mode: "0755"

    - name: Create service directory if not exists
      file:
        path: "{{systemdServiceDir}}"
        state: directory
        mode: "0755"

    - name: Copy service template to location
#      become: yes
#      become_user: root
      copy:
        src: "{{workspace}}/ansible/services/{{appName}}.service"
        dest: "{{systemdServiceDir}}"

    - name: Download jar file from Jfrog
      get_url:
        url: "{{jfrogUrl}}/artifactory/{{jfrogRepository}}/{{jfrogArtifactId}}/{{appName}}/{{snapshot_version.matches[0]['latest']}}/{{appName}}-{{jar_version.matches[0]['value']}}.jar"
        url_username: "{{jfrogUserName}}"
        url_password: "{{jfrog_pass}}"
        dest: "{{downloadDir}}/{{appName}}.jar"
        force: yes